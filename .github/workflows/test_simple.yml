name: 简单测试

on:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: 检出代码
      uses: actions/checkout@v3

    - name: 设置 Python 环境
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: 测试 Python 版本
      run: |
        python --version
        pip --version

    - name: 测试 Secrets 配置
      run: |
        echo "SMTP_SERVER: ${{ secrets.SMTP_SERVER }}"
        echo "SMTP_PORT: ${{ secrets.SMTP_PORT }}"
        echo "SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}"
        if [ -z "${{ secrets.SENDER_PASSWORD }}" ]; then
          echo "❌ SENDER_PASSWORD 未配置"
          exit 1
        else
          echo "✅ SENDER_PASSWORD 已配置"
        fi
        echo "SENDER_NAME: ${{ secrets.SENDER_NAME }}"
        echo "RECIPIENT_EMAIL: ${{ secrets.RECIPIENT_EMAIL }}"

    - name: 安装基础依赖
      run: |
        python -m pip install --upgrade pip
        pip install pandas numpy PyYAML requests

    - name: 测试邮件模块导入
      run: |
        cat > email_config.yaml << EOF
        smtp:
          server: ${{ secrets.SMTP_SERVER }}
          port: ${{ secrets.SMTP_PORT }}
        sender:
          email: ${{ secrets.SENDER_EMAIL }}
          password: ${{ secrets.SENDER_PASSWORD }}
          name: ${{ secrets.SENDER_NAME }}
        recipients:
          - ${{ secrets.RECIPIENT_EMAIL }}
        send_no_alert_email: false
        EOF

        python -c "
import sys
sys.path.insert(0, '.')
from position_analysis.email_notifier import EmailNotifier
print('✅ 邮件模块导入成功')
notifier = EmailNotifier()
print('✅ 邮件通知器初始化成功')
print('SMTP服务器:', notifier.config['smtp']['server'])
print('发件邮箱:', notifier.config['sender']['email'])
"
